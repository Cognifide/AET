#
# Copyright (C) 2021 Wunderman Thompson Technology
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
#
name: pre-release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: Release Version
        required: true
        default: auto

jobs:
  build:
    name: Create Pre-Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Update CHANGELOG.md
        run: |
          sed -i '/^\*\*List of changes that are finished but not yet released in any final version.\*\*$/a \
          \
          ## Version '"$VERSION"'\
          ' CHANGELOG.md

      - name: Commit changes
        run: |
          git config --global user.name 'AET Release'
          git config --global user.email 'aet-release@users.noreply.github.com'
          git commit -am "[AET Release] Update CHANGELOG.md"
          cat CHANGELOG.md
          # git push

      - name: Build Changelog for Github Release
        id: build_changelog
        run: |
          RELEASE_CHANGELOG=$(sed '/## Version '"$VERSION"'/,/## Version/!d;//d' CHANGELOG.md)
          echo "Release changelog content: $RELEASE_CHANGELOG" >> /tmp/release_changelog.md

      - name: Build project
        run: |
          ./gradlew :zip:make

      - name: Create Project Release with Auto Versioning
        if: github.event.inputs.releaseVersion == 'auto'
        run: |
          ./gradlew release \
              -Prelease.customUsername=${{ github.actor }} \
              -Prelease.customPassword=${{ github.token }}

      - name: Create Project Release with Forced Versions
        if: github.event.inputs.releaseVersion != 'auto'
        run: |
          ./gradlew release \
            -Prelease.forceVersion=${{ github.event.inputs.releaseVersion }}
            -Prelease.customUsername=${{ github.actor }} \
            -Prelease.customPassword=${{ github.token }}

      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: /tmp/release_changelog.md
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          prerelease: true

      - name: Upload Bundles
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: bundles.zip
          asset_path: ./zip/build/packages/bundles.zip
          asset_content_type: application/zip

      - name: Upload Configs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: configs.zip
          asset_path: ./zip/build/packages/configs.zip
          asset_content_type: application/zip

      - name: Upload Features
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: features.zip
          asset_path: ./zip/build/packages/features.zip
          asset_content_type: application/zip

      - name: Upload Report
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: report.zip
          asset_path: ./zip/build/packages/report.zip
          asset_content_type: application/zip

      - name: Upload Sample Site
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: sample-site.zip
          asset_path: ./zip/build/packages/sample-site.zip
          asset_content_type: application/zip
